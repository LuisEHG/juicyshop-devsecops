name: Security Pipeline

on:
  push:
  pull_request:

jobs:
  bandit_scan:
    name: Bandit Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Bandit
        run: pip install bandit
      - name: Run Bandit
        run: |
          mkdir -p resultados
          bandit -r . -f json -o resultados/bandit-default.json || true
      - name: Upload Bandit Results
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: resultados/bandit-default.json

  semgrep_scan:
    name: Semgrep Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create resultados directory
        run: mkdir -p resultados
      - name: Run Semgrep with error handling
        run: |
          semgrep --config=auto --json --output=resultados/semgrep-default.json . || echo "Semgrep completed with findings"
        continue-on-error: true
      - name: Upload Semgrep Results
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: resultados/semgrep-default.json

  zap_scan:
    name: OWASP ZAP Scan
    runs-on: ubuntu-latest
    services:
      zap:
        image: owasp/zap2docker-stable
        options: >-
          --user root
          -v /var/run/docker.sock:/var/run/docker.sock
        ports:
          - 8080:8080
    steps:
      - uses: actions/checkout@v4
      - name: Create directories
        run: mkdir -p resultados zap-report
      - name: Start Juice Shop container
        run: |
          docker run -d --name juice-shop -p 3000:3000 bkimminich/juice-shop
      - name: Wait for Juice Shop to be ready
        run: |
          timeout 60s bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 5; done' || true
          sleep 10
      - name: Run ZAP Baseline Scan
        run: |
          docker run --rm \
            -v $(pwd)/zap-report:/zap/wrk:rw \
            -t owasp/zap2docker-stable \
            zap-baseline.py \
            -t http://host.docker.internal:3000 \
            -I \
            -r zap-report.html \
            -J zap-result.json \
            -j \
            --hook=/zap/auth_hook.py
      - name: Move ZAP results to resultados directory
        run: |
          cp zap-report/* resultados/ 2>/dev/null || true
      - name: Upload ZAP Results
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: resultados/

  security_results:
    name: Security Results Summary
    runs-on: ubuntu-latest
    needs: [bandit_scan, semgrep_scan, zap_scan]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-reports
      - name: List downloaded files
        run: find all-reports -type f